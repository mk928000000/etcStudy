## Template Literal
- 문자열 만드는 방법


var 문자 = `손흥민`;   ---- backtick/ backquote 이것도 문자열이다.




## backtick / backquote 사용방법
1. 엔터키 사용 가능

    var 문자 = '손흥        ---- 깨짐
    민';

    var 문자 = `손흥        ---- 가능.
    민`;


2. 중간중간 변수를 넣기 쉬움

    var 변수 = '손흥민';
    var 문자 = '안녕하세요 저는 ' + 변수 + '입니다' ;
    console.log(문자);

    var 변수 = '손흥민';
    var 문자 = `안녕하세요 저는 ${변수} 입니다`;
    console.log(문자);


예) var 템플릿 = `<div>${변수}</div>`;



## Tagged Literal
1. 리터럴 문자를 ${}를 기준으로 해체해서 분석한다.
- 단어 순서를 변경하거나
- 단어를 제거하거니
- ${변수} 위치를 바꾸거나



## 해체분석기 파라미터 
    파라미터 1. 문자들을 array화 한다.
    파라미터 2. ${변수}를 뜻한다.
    파라미터 3. 두번째 ${변수} 를 뜻한다


    var 변수 = '손흥민';
    var 문자 = `안녕하세요 ${변수} 입니다`;

    function 해체분석기(문자들, 변수들, 변수들2){
        console.log(문자들);
        console.log(변수들);
        console.log(변수들2);
    }

    해체분석기 `안녕하세요 ${변수} 입니다`            ---- 함수에 소괄호 대신 실행 가능. 함수 뒤에 `` 붙여도 함수가 실행이 됨.



## 예시
'안녕하세요 ${변수} 입니다' =====> '입니다 ${변수} 안녕하세요'

    var 변수 = '손흥민';
    var 문자 = `안녕하세요 ${변수} 입니다`;

    function 해체분석기(문자들, 변수들, 변수들2){
        console.log(문자들[1] + 변수들 + 문자들[0]);
    }

    해체분석기 `안녕하세요 ${변수} 입니다`     


    
'바지 20 양말 100'      ======> '양말 20 바지 100'
    var pants = 0;
    var socks = 100;

    function 해체분석기(문자들, 변수,변수2) {
        if(변수 < 1){
            console.log(`${문자들[0]} 다팔렸어요 ~~`);
        }else {
            console.log(`${문자들[1]} ${변수} ${문자들[0]} ${변수2}`);
        }
    }
    해체분석기 `바지${pants} 양말${socks}`;